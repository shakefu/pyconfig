---
description: Testing guidelines and best practices
globs: test/**/*, tests/**/*, **/test_*.py, **/*_test.py, test*/**/*.py, test*/*.py
alwaysApply: false
---

# Testing Guidelines

## What to test

- Start with creating exercise tests, testing intended behavior of functions, classes, and modules
- Try to minimally mock so we ensure that we aren't creating passthrough tests of no value
- Once we have good exercise tests, then continue to create more tests for common edge cases

## Test Structure & Organization

- Write comprehensive tests for all new functionality
- Use pytest fixtures appropriately
- Aim for high test coverage
- Test files should be named `test_*.py`
- Use descriptive test function names that explain what is being tested
- Tests should be placed in the `tests/` directory with matching structure to `pyconfig/`

## Test Best Practices

- Use pytest for all testing
- Group related tests into classes when appropriate
- Use parametrized tests for testing multiple scenarios
- Mock external dependencies appropriately
- Test both success and failure cases
- Include edge case testing

## Fixtures & Setup

- Use pytest fixtures for common test setup
- Prefer session, module, or class scoped fixtures when appropriate
- Keep fixtures focused and reusable
- Use temporary directories for file-based tests
